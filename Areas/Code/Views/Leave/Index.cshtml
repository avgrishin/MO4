@model MO.Areas.Code.Models.LeaveViewModel
@{
  Layout = "_Layout.cshtml";
}

<div class="container form-horizontal">
  <h2>@ViewBag.Title</h2>
  @using (Html.BeginForm())
  {
    @Html.AntiForgeryToken()
    <div class="well">
      <div class="form-group">
        @Html.LabelFor(m => m.Name1, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
          @Html.EditorFor(m => m.Name1, new { htmlAttributes = new { @readonly = "true" } })
          @Html.ValidationMessageFor(m => m.Name1, "", new { @class = "text-danger" })
          @Html.HiddenFor(m => m.Email1)
          @Html.ValidationMessageFor(m => m.Email1, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>
    <h4>ПРОШУ ПРЕДОСТАВИТЬ ОТПУСК</h4>
    <div class="well">
      <div class="form-group form">
        <div class="col-md-4">
          @Html.LabelFor(m => m.TypeId)
          @Html.DropDownListFor(m => m.TypeId, (IEnumerable<SelectListItem>)ViewBag.TypeList, null, HtmlHelper.AnonymousObjectToHtmlAttributes(new { @class = "form-control" }))
          @Html.ValidationMessageFor(m => m.TypeId, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2">
          @Html.LabelFor(m => m.DateB)
          @Html.EditorFor(m => m.DateB)
          @Html.ValidationMessageFor(m => m.DateB, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2">
          @Html.LabelFor(m => m.DateE)
          @Html.EditorFor(m => m.DateE)
          @Html.ValidationMessageFor(m => m.DateE, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-2">
          @Html.LabelFor(m => m.Days)
          @Html.EditorFor(m => m.Days)
          @Html.ValidationMessageFor(m => m.Days, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group form">
        <div class="col-md-12">
          @Html.LabelFor(m => m.Comment1)
          @Html.EditorFor(m => m.Comment1)
          @Html.ValidationMessageFor(m => m.Comment1, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>
    <h4>НА ПЕРИОД МОЕГО ОТПУСКА ИСПОЛНЕНИЕ ОБЯЗАННОСТЕЙ ВОЗЛАГАЕТСЯ НА</h4>
    <div class="well">
      <div class="form-group">
        @Html.LabelFor(m => m.Name2, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
          @Html.EditorFor(m => m.Name2)
          @Html.ValidationMessageFor(m => m.Name2, "", new { @class = "text-danger" })
          @Html.HiddenFor(m => m.Email2)
          @Html.ValidationMessageFor(m => m.Email2, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>
    <h4>СОГЛАСОВАНИЕ</h4>
    <div class="well">
      <div class="form-group">
        @Html.LabelFor(m => m.Name4, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
          @Html.EditorFor(m => m.Name4)
          @Html.ValidationMessageFor(m => m.Name4, "", new { @class = "text-danger" })
          @Html.HiddenFor(m => m.UserName4)
          @Html.HiddenFor(m => m.Email4)
          @Html.ValidationMessageFor(m => m.UserName4, "", new { @class = "text-danger" })
          @Html.ValidationMessageFor(m => m.Email4, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="form-group">
        @Html.LabelFor(m => m.Name5, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
          @Html.EditorFor(m => m.Name5)
          @Html.ValidationMessageFor(m => m.Name5, "", new { @class = "text-danger" })
          @Html.HiddenFor(m => m.UserName5)
          @Html.HiddenFor(m => m.Email5)
          @Html.ValidationMessageFor(m => m.UserName5, "", new { @class = "text-danger" })
          @Html.ValidationMessageFor(m => m.Email5, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>
    <div class="form-group">
      <div class="col-md-12 text-right">
        <input class="btn btn-primary" type="submit" value="Зарегистрировать" />
      </div>
    </div>
  }
</div>

@section css {
  <link href="~/Content/themes/smoothness/jquery-ui.css" rel="stylesheet" />
  @Styles.Render("~/Content/select2")
  <style>
    .select2-container--bootstrap .select2-selection {
      border-radius: 0;
    }

    .select2-results__option {
      padding-left: 12px;
      padding-right: 12px;
    }

    .well {
      border-radius: 0;
    }
    @@media (min-width: 768px) {
      .navbar {
        border-radius: 0;
      }
}

  </style>
}

@section scripts {
  @Scripts.Render("~/bundles/jqueryui")
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/bundles/select2")
  @Scripts.Render("~/bundles/bloodhound")
  <script>
    function addDays(date, days) {
      var result = new Date(date);
      result.setDate(date.getDate() + days);
      return result;
    }
    (function ($) {
      $('input[type=text][dp=true]:not([readonly=true])').datepicker({ showOtherMonths: true, selectOtherMonths: true, numberOfMonths: 1, duration: "slow", dateFormat: "dd.mm.yy", firstDay: 1, monthNames: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], prevText: "Раньше", nextText: "Позже", dayNamesMin: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"] });
      $("#DateB").datepicker("option", "onClose", function (selectedDate) {
        $("#DateE").datepicker("option", "minDate", addDays($(this).datepicker('getDate'), 0));
        $("#Days").val((new Date($("#DateE").datepicker('getDate')) - new Date($(this).datepicker('getDate'))) / (1000 * 60 * 60 * 24) + 1);
      });
      $("#DateE").datepicker("option", "minDate", addDays($("#DateB").datepicker('getDate'), 0)).datepicker("option", "onClose", function (selectedDate) {
        $("#Days").val((new Date($(this).datepicker('getDate')) - new Date($("#DateB").datepicker('getDate'))) / (1000 * 60 * 60 * 24) + 1);
      });
      $("#Days").on('change', function () {
        $("#DateE").datepicker("setDate", addDays($("#DateB").datepicker('getDate'), parseInt($(this).val()) - 1));
      });
      $.fn.select2.defaults.set("theme", "bootstrap");
      $('#TypeId').select2({
        minimumResultsForSearch: 10
      });
      $.validator.methods.date = function (value, element) {
        return this.optional(element) || /^(0?[1-9]|[12][0-9]|3[0-1])[/., -](0?[1-9]|1[0-2])[/., -](19|20)?\d{2}$/.test(value) || /^(0?[1-9]|[1][0-9]|2[0-3])[:](0?[1-9]|[1-5][0-9])$/.test(value);
      }

      $.fn.typeahead.Constructor.prototype.highlighter = function (item) {
        var html = $('<div></div>');
        var query = this.query;
        var i = item.toLowerCase().indexOf(query.toLowerCase());
        var len, leftPart, middlePart, rightPart, strong;
        len = query.length;
        if (len === 0) {
          return html.html(item).html();
        }
        while (i > -1) {
          leftPart = item.substr(0, i);
          middlePart = item.substr(i, len);
          rightPart = item.substr(i + len);
          strong = $('<strong></strong>').text(middlePart);
          html.append(leftPart).append(strong);
          item = rightPart;
          i = item.toLowerCase().indexOf(query.toLowerCase());
        }
        return html.append(item).html();
      };

      var uName = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace,
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        remote: '/code/leave/FindU/%QUERY'
      });

      uName.initialize();

      $('#Name2, #Name4, #Name5').typeahead({
        items: 'all',
        name: 'uName',
        source: uName.ttAdapter(),
        minLength: 2,
        matcher: function () { return true; },
        sorter: function (items) { return items; },
        updater: function (item) { $(this)[0].$element.val(item.name); return item; },
        displayText: function (item) { return (item.name != null ? item.name : null) + (item.Email != null ? "<br><i>" + item.Email + "</i>" : ""); }
      });

      $('#Name2').change(function () {
        var current = $(this).typeahead("getActive");
        if (current) {
          if (current.name == $(this).val()) {
            $('#Email2').val(current.Email);
          } else {
            $('#Email2').val('');
          }
        }
      });

      $('#Name4').change(function () {
        var current = $(this).typeahead("getActive");
        if (current) {
          if (current.name == $(this).val()) {
            $('#UserName4').val(current.UserName);
            $('#Email4').val(current.Email);
          } else {
            $('#UserName4').val('');
            $('#Email4').val('');
          }
        }
      });

      $('#Name5').change(function () {
        var current = $(this).typeahead("getActive");
        if (current) {
          if (current.name == $(this).val()) {
            $('#UserName5').val(current.UserName);
            $('#Email5').val(current.Email);
          } else {
            $('#UserName5').val('');
            $('#Email5').val('');
          }
        }
      });

      $('button[type=button][id=b1]').on('click', function () {
        $(this)[0].form.submit();
      });

      //$.validator.setDefaults({
      //  errorClass: 'has-error',
      //  validClass: 'has-success',
      //  //focusCleanup: true,
      //  highlight: function (element, errorClass, validClass) {
      //    $(element).parent().removeClass(validClass).addClass(errorClass);
      //  },
      //  unhighlight: function (element, errorClass, validClass) {
      //    $(element).parent().removeClass(errorClass).addClass(validClass);
      //  }
      //});

    })(jQuery);
  </script>
}
